This directory contains experiments, comments and code on using single optical
mouse attached at the back of the robot to measure robot movements more
reliably.

In my case, the mouse is attached to the rear edge of the robot with its
*side*. The wire ("tail" of the mouse) goes thus towards one side of the robot.
In my particular case, it is the right hand side of the robot.

The mouse is not attached exactly perpendicularly (because its case is
needlessly ergonomic and not nicely squared). The mouse thus reports movements
in both axes as the robot travels straight forward and we need to slightly
"unrotate" the readings to get the real distance travelled.

My first recording of mouse moves was done with ./report-mouse-moves.py while the kids were playing with the robot. There were nice segments where the robot travelled straight forward but also segments where the robot did crazy things.

Interestingly, the report-mouse-moves.py always reports one axis delta as zero,
alternating the axes. We thus have to accummulate the deltas for a while to
have a more reliable observation.

These are my handy scripts for plotting the complete trajectory:

cat first-sample-trajectory.txt \
| labelledxychart --data=1,2,0,'',linespoints --set='size ratio -1' \
| gpsandbox

The files sample-left-rotation.txt and sample-forward-movement.txt are excerpts
from that complete trajectory that I will use for finding out the necessary
"unrotation".

Here is how to rotate the plot manually by 8 degrees:

cat first-sample-trajectory.txt \
| ./rot-xy.py 8 \
| labelledxychart --data=1,2,0,'',linespoints --set='size ratio -1' \
| gpsandbox

Leaving out the 8 will search for the best angle automatically, *for a flat part* of the trajectory:

cat sample-forward-movement.txt \
| ./rot-xy.py 8 \
| labelledxychart --data=1,2,0,'',linespoints --set='size ratio -1' \
| gpsandbox
-> Found best rotation angle: 7.11561792739


